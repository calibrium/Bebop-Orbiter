class Cfg:
    """`User config for bebop`"""

    Iteration = 3
    """
    ====================================================================================
    Количество итераций. Если итерация равна 1, то выполнятся 2 транзакции бибоп (из WETH в токены, затем из токенов в WETH), потом
    выполнится мост orbiter в произвольную сеть из списка to_bridge_chains
    """
    retry_bebop = 3
    """
    Количество повторений, при неудачной транзакции
    """

    img = """
    MadnessHat
  

    """

    """
    ====================================================================================
    
    >>>ПРИВАТНЫЕ КЛЮЧИ<<<

    Привтные ключи нужно загружать в файл "private_keys.txt" каждый
    с новой строки без пробелов и запятых

    Пример:
        0x000000000000000000000000000001
        0x000000000000000000000000000002
        0x000000000000000000000000000003

    ====================================================================================
    """


    min_percent = 10
    max_percent = 15
    balance_percent = [(min_percent / 100), (max_percent / 100)]
    """
    ====================================================================================

    >>>ПРОЦЕНТ<<<

    1. Переменная отвечает за процентаж, который будет использоваться
    скриптом

    Пример:
        У вас есть 1 эфир, если вы поставите "min_percent = 10" и "max_percent = 15"
        скрипт будет использвать от 0.1 до 0.15 эфира

    2. Поставьте диапазон в переменные "min_percent" и "max_percent"
        
    Пример: 
        min_percent = 10
        max_percent = 15

    3. Вы можете пооставить 2 одинковых числа, например 10 и 10

    Пример: 
        min_percent = 10
        max_percent = 10

    ====================================================================================
    """

    tokens_from = None
    tokens_to = None
    one_to_many_tokens = 2
    """
    ====================================================================================    

    ТОКЕНЫ:
        ETHEREUM (Chain id 1)
            USDC: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48
            AAVE: 0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9
            DAI: 0x6B175474E89094C44Da98b954EedeAC495271d0F
            CRV: 0xD533a949740bb3306d119CC777fa900bA034cd52
            COMP: 0xc00e94Cb662C3520282E6f5717214004A7f26888
            BUSD: 0x4Fabb145d64652a948d72533023f6E7A623C7C53
            USDT: 0xdAC17F958D2ee523a2206206994597C13D831ec7
            SUSHI: 0x6B3595068778DD592e39A122f4f5a5cF09C90fE2
            WBTC: 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599
            UNI: 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984

        ARBITRUM (Chain id 42161)
            USDT: 0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9
            DAI: 0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1
            USDC.e: 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8

        POLYGON (Chain id 137)
            AAVE: 0xD6DF932A45C0f255f85145f286eA0b292B21C90B
            LINK: 0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39
            CRV: 0x172370d5Cd63279eFa6d502DAB29171933a610AF
            USDT: 0xc2132D05D31c914a87C6611C10748AEb04B58e8F
            WBTC: 0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6
            USDC: 0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174
            DAI: 0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063


    >>>СВАПЫ НА ТОКЕНЫ<<<
    1. Если вы свапаете с ТОКЕНОВ на ЭФИР, то вы должны пооставить контракты токенов
    в переменную "tokens_from" в виде списка с строками внутри "[]" при этом "tokens_to"
    может оставаться "None"

    Пример:
        tokens_from = [
            "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9", 
            "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"
        ]

    Пример2:
        tokens_from = ["0x00", "0x01"]

    Пример3:
        tokens_from = ["0x00"]

    2. Если вы хотите свапать с ЭФИРА на ТОКЕНЫ, то вы должны поставить None в
    переменную "tokens_from"
        
        2.1 Если вы хотите обменять эфир на определенные токены, то вы
        должны поставить токены списком в "tokens_to", при этом переменная
        "one_to_many_tokens" будет игнорироваться

            Пример:
                tokens_to = [
                    "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9", 
                    "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"
                ]

            Пример2:
                tokens_to = ["0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"]


        2.2 Если вы хотите обменять эфир на случайные токены, то вы
        должны поставить "tokens_to = None"
            Пример:
                tokens_to = None
 
        
        2.3 "one_to_many_tokens" это количество токенов при свапе на рандомные
        токены с ЭФИРА на ТОКЕНЫ

            Пример:
                one_to_many_tokens = 1
            
            2.3.1 Если вы поставите значение "one_to_many_tokens" больше
            чем есть токенов на этой сети, то вам выдаст ошибку

    ====================================================================================
    """


    minimal_balance = 0
    """
    ====================================================================================

    >>>МИНИМАЛЬНЫЙ БАЛАНС<<<

    1. Переменная отвечает за минимальный баланс нативной монеты, 
    при котором запустится скрипт

    2. Баланс нужно ставить в ETH, не WEI

    Пример:
        minimal_balance = 0.01

    ====================================================================================
    """


    repeat_count = [1, 1]
    """
    ====================================================================================

    >>>КОЛИЧЕСТВО ПОВТОРЕНИЙ<<<

    1. Переменная отвечает за количество повторений свапов из WETH в токены и обратно на одном кошельке

    2. Вы можете поставить [1, 1] для того чтобы был один свап

    3. Вы можете поставить [5, 10], чтобы было от 5 до 10 свапов (или любые
    другие неотрицательные целые значения). Лучше не ставить больше [1, 3]

    Пример1:
        repeat_count = [1, 1]

    Пример2:
        repeat_count = [1, 10] 

    Пример3:
        repeat_count = [5, 10]
    
    ====================================================================================
    """


    sleep_range = [10, 20]
    sleep_range_between_actions = [10, 15]
    """
    ====================================================================================

    >>>ДИАПАЗОН ЗАДЕРЖЕК<<<

    1. Переменная "sleep_range" отвечает за диапазон задержки перед стартом кошелька

        1.2 Задержка работает на каждой итерации

        1.3 Вы можете поставить два одинаковых значения в списке 
        для точного времени задержки

        Пример1:
            sleep_range = [60, 60]

        Пример2:
            sleep_range = [60, 120] 
        
    2. Переменная "sleep_range_between_actions" отвечает за диапазон задержки
    между действиями (аппрув, врап, анварп, свап)

        2. Параметр аналогичен "sleep_range"

        Пример1:
            sleep_range_between_actions = [60, 60]

        Пример2:
            sleep_range_between_actions = [60, 120]  
    
    ====================================================================================
    """

    gas_limit = 9
    ethereum_rpc = "https://eth.llamarpc.com"
    """
    ====================================================================================

    >>>ЛИМИТ ГАЗА<<<

    1. Переменная отвечает за лимит газа

    2. Лимит газа нужно ставить в gwei

    3. Вам нужно поставить рпц в переменную 
    "ethereum_rpc" между кавычек ("")
    
    Пример:
        gas_limit = 100
        ethereum_rpc = "https://eth.llamarpc.com"
        
    4. Если вы не хотите ставить лимит, то обе переменные нужно
    поставить в None

    Пример:
        gas_limit = None
        ethereum_rpc = None

    5. Если хотя бы одна из переменных будет None, то
    лимит газа работать НЕ БУДЕТ

    Пример1:
        gas_limit = None
        ethereum_rpc = "https://eth.llamarpc.com"

    Пример2:
        gas_limit = 10
        ethereum_rpc = None

    ====================================================================================
    """
    

    """Конфиг для Orbiter
    ====================================================================================
    
    

    ====================================================================================
    """
    
    chains_data = {
        # 'ethereum': {'explorer': 'https://etherscan.io/tx/'},
        'base': {'explorer': 'https://basescan.org/tx/'},
        'arbitrum': {'explorer': 'https://arbiscan.io/tx/'},
        # 'zksync': {'explorer': 'https://era.zksync.network/tx/'},
        'optimism': {'explorer': 'https://optimistic.etherscan.io/tx/'},
        # 'scroll': {'explorer': 'https://scrollscan.com/tx/'},
        'blast': {'explorer': 'https://blastscan.io/tx/'},
        # 'taiko' : {'explorer': 'https://explorer.hekla.taiko.xyz/tx'},
    }

    orbiter_codes = {
        'arbitrum': '9002',
        'optimism': '9007',
        'base': '9021',
        # 'zksync': '9014',
        # 'taiko' : '9020',
        # 'scroll': '9019',
        'blast': '9040',
    }
    
    orbiter_adresses = {
    'arbitrum': '0x80C67432656d59144cEFf962E8fAF8926599bCF8',
    'optimism': '0xE4eDb277e41dc89aB076a1F049f4a3EfA700bCE8',
    'base': '0x80C67432656d59144cEFf962E8fAF8926599bCF8',
    'blast': '0x80C67432656d59144cEFf962E8fAF8926599bCF8',
    }
    
    RPCs                = {
        'ethereum': 'https://rpc.ankr.com/eth',
        'base'    : 'https://base.meowrpc.com',
        'optimism': 'https://optimism.meowrpc.com',
        'arbitrum': 'https://arbitrum.meowrpc.com',
        # 'zksync'  : 'https://mainnet.era.zksync.io',
        'blast'   : 'https://rpc.blast.io',
        # 'scroll'  : 'https://scroll.drpc.org',
        # 'taiko'   : 'https://rpc.ankr.com/taiko'
    }

    retry               = 8             # кол-во попыток при ошибках / фейлах

    max_gwei            = 25
    gwei_multiplier     = 1.05          # умножать текущий гвей на 1.05 | для случаев если газ резко вырастает и транза зависает надолго
    to_wait_tx          = 1             # сколько минут ожидать транзакцию. если транза будет находится в пендинге после указанного времени то будет считатся зафейленной

    sleep_after_tx      = [10, 20]      # спать после каждой транзакции от 10 до 20 секунд
    sleep_after_acc     = [40, 80]      # спать после каждого аккаунта от 40 до 80 секунд

    # сети, в которые осуществляется bridge. То, что помечено # говорит о том,
    # что bebop api пока не поддерживает данные сети
    to_bridge_chains    = [             
        "arbitrum",
        "base",
        # "zksync",
        "optimism",
        # "taiko",
        "blast",
        # "scroll",
    ]

    keep_values         = {             # сколько оставлять ETH в сетях:
        "base"  : [0.0001, 0.0001], 
        "optimism"  : [0.001, 0.001], 
        "arbitrum"  : [0.001, 0.001], 
        "blast"  : [0.0001, 0.0001],
    }
